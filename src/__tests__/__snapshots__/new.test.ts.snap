// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`projen new awscdk-app-ts 1`] = `
Object {
  ".projenrc.js": "const { AwsCdkTypeScriptApp } = require('projen');
const project = new AwsCdkTypeScriptApp({
  cdkVersion: '1.95.2',
  defaultReleaseBranch: 'main',
  name: 'my-project',

  // cdkDependencies: undefined,        /* Which AWS CDK modules (those that start with \\"@aws-cdk/\\") this app uses. */
  // deps: [],                          /* Runtime dependencies of this module. */
  // description: undefined,            /* The description is just a string that helps people understand the purpose of the package. */
  // devDeps: [],                       /* Build dependencies for this module. */
  // packageName: undefined,            /* The \\"name\\" in package.json. */
  // projectType: ProjectType.UNKNOWN,  /* Which type of project this is (library/app). */
  // releaseWorkflow: undefined,        /* Define a GitHub workflow for releasing from \\"main\\" when new versions are bumped. */
});
project.synth();",
}
`;

exports[`projen new awscdk-construct 1`] = `
Object {
  ".projenrc.js": "const { AwsCdkConstructLibrary } = require('projen');
const project = new AwsCdkConstructLibrary({
  author: 'My User Name',
  authorAddress: 'my@user.email.com',
  cdkVersion: '1.95.2',
  defaultReleaseBranch: 'main',
  name: 'my-project',
  repositoryUrl: 'git@boom.com:foo/bar.git',

  // cdkDependencies: undefined,        /* Which AWS CDK modules (those that start with \\"@aws-cdk/\\") does this library require when consumed? */
  // cdkTestDependencies: undefined,    /* AWS CDK modules required for testing. */
  // deps: [],                          /* Runtime dependencies of this module. */
  // description: undefined,            /* The description is just a string that helps people understand the purpose of the package. */
  // devDeps: [],                       /* Build dependencies for this module. */
  // packageName: undefined,            /* The \\"name\\" in package.json. */
  // projectType: ProjectType.UNKNOWN,  /* Which type of project this is (library/app). */
  // releaseWorkflow: undefined,        /* Define a GitHub workflow for releasing from \\"main\\" when new versions are bumped. */
});
project.synth();",
}
`;

exports[`projen new cdk8s-app-ts 1`] = `
Object {
  ".projenrc.js": "const { Cdk8sTypeScriptApp } = require('projen');
const project = new Cdk8sTypeScriptApp({
  cdk8sVersion: '1.0.0-beta.10',
  defaultReleaseBranch: 'main',
  name: 'my-project',

  // deps: [],                          /* Runtime dependencies of this module. */
  // description: undefined,            /* The description is just a string that helps people understand the purpose of the package. */
  // devDeps: [],                       /* Build dependencies for this module. */
  // packageName: undefined,            /* The \\"name\\" in package.json. */
  // projectType: ProjectType.UNKNOWN,  /* Which type of project this is (library/app). */
  // releaseWorkflow: undefined,        /* Define a GitHub workflow for releasing from \\"main\\" when new versions are bumped. */
});
project.synth();",
}
`;

exports[`projen new cdk8s-construct 1`] = `
Object {
  ".projenrc.js": "const { ConstructLibraryCdk8s } = require('projen');
const project = new ConstructLibraryCdk8s({
  author: 'My User Name',
  authorAddress: 'my@user.email.com',
  cdk8sVersion: '1.0.0-beta.10',
  defaultReleaseBranch: 'main',
  name: 'my-project',
  repositoryUrl: 'git@boom.com:foo/bar.git',

  // deps: [],                          /* Runtime dependencies of this module. */
  // description: undefined,            /* The description is just a string that helps people understand the purpose of the package. */
  // devDeps: [],                       /* Build dependencies for this module. */
  // packageName: undefined,            /* The \\"name\\" in package.json. */
  // projectType: ProjectType.UNKNOWN,  /* Which type of project this is (library/app). */
  // releaseWorkflow: undefined,        /* Define a GitHub workflow for releasing from \\"main\\" when new versions are bumped. */
});
project.synth();",
}
`;

exports[`projen new java 1`] = `
Object {
  "src/test/java/projenrc.java": "import org.projen.java.JavaProject;
import org.projen.java.JavaProjectOptions;

public class projenrc {
    public static void main(String[] args) {
        JavaProject project = new JavaProject(JavaProjectOptions.builder()
            .artifactId(\\"my-app\\")
            .groupId(\\"org.acme\\")
            .name(\\"my-project\\")
            .version(\\"0.1.0\\")
            .build());
        project.synth();
    }
}",
}
`;

exports[`projen new jsii 1`] = `
Object {
  ".projenrc.js": "const { JsiiProject } = require('projen');
const project = new JsiiProject({
  author: 'My User Name',
  authorAddress: 'my@user.email.com',
  defaultReleaseBranch: 'main',
  name: 'my-project',
  repositoryUrl: 'git@boom.com:foo/bar.git',

  // deps: [],                          /* Runtime dependencies of this module. */
  // description: undefined,            /* The description is just a string that helps people understand the purpose of the package. */
  // devDeps: [],                       /* Build dependencies for this module. */
  // packageName: undefined,            /* The \\"name\\" in package.json. */
  // projectType: ProjectType.UNKNOWN,  /* Which type of project this is (library/app). */
  // releaseWorkflow: undefined,        /* Define a GitHub workflow for releasing from \\"main\\" when new versions are bumped. */
});
project.synth();",
}
`;

exports[`projen new nextjs 1`] = `
Object {
  ".projenrc.js": "const { web } = require('projen');
const project = new web.NextJsProject({
  defaultReleaseBranch: 'main',
  name: 'my-project',

  // deps: [],                          /* Runtime dependencies of this module. */
  // description: undefined,            /* The description is just a string that helps people understand the purpose of the package. */
  // devDeps: [],                       /* Build dependencies for this module. */
  // packageName: undefined,            /* The \\"name\\" in package.json. */
  // projectType: ProjectType.UNKNOWN,  /* Which type of project this is (library/app). */
  // releaseWorkflow: undefined,        /* Define a GitHub workflow for releasing from \\"main\\" when new versions are bumped. */
  // tailwind: true,                    /* Setup Tailwind CSS as a PostCSS plugin. */
});
project.synth();",
}
`;

exports[`projen new nextjs-ts 1`] = `
Object {
  ".projenrc.js": "const { web } = require('projen');
const project = new web.NextJsTypeScriptProject({
  defaultReleaseBranch: 'main',
  name: 'my-project',

  // deps: [],                          /* Runtime dependencies of this module. */
  // description: undefined,            /* The description is just a string that helps people understand the purpose of the package. */
  // devDeps: [],                       /* Build dependencies for this module. */
  // packageName: undefined,            /* The \\"name\\" in package.json. */
  // projectType: ProjectType.UNKNOWN,  /* Which type of project this is (library/app). */
  // releaseWorkflow: undefined,        /* Define a GitHub workflow for releasing from \\"main\\" when new versions are bumped. */
  // tailwind: true,                    /* Setup Tailwind CSS as a PostCSS plugin. */
});
project.synth();",
}
`;

exports[`projen new node 1`] = `
Object {
  ".projenrc.js": "const { NodeProject } = require('projen');
const project = new NodeProject({
  defaultReleaseBranch: 'main',
  name: 'my-project',

  // deps: [],                          /* Runtime dependencies of this module. */
  // description: undefined,            /* The description is just a string that helps people understand the purpose of the package. */
  // devDeps: [],                       /* Build dependencies for this module. */
  // packageName: undefined,            /* The \\"name\\" in package.json. */
  // projectType: ProjectType.UNKNOWN,  /* Which type of project this is (library/app). */
  // releaseWorkflow: undefined,        /* Define a GitHub workflow for releasing from \\"main\\" when new versions are bumped. */
});
project.synth();",
}
`;

exports[`projen new project 1`] = `Object {}`;

exports[`projen new python 1`] = `
Object {
  ".projenrc.js": "const { python } = require('projen');
const project = new python.PythonProject({
  authorEmail: 'my@user.email.com',
  authorName: 'My User Name',
  moduleName: 'my_project',
  name: 'my-project',
  version: '0.1.0',

  // deps: [],                          /* List of runtime dependencies for this project. */
  // description: undefined,            /* A short description of the package. */
  // devDeps: [],                       /* List of dev dependencies for this project. */
  // pip: true,                         /* Use pip with a requirements.txt file to track project dependencies. */
  // poetry: false,                     /* Use poetry to manage your project dependencies, virtual environment, and (optional) packaging/publishing. */
  // projectType: ProjectType.UNKNOWN,  /* Which type of project this is (library/app). */
  // pytest: true,                      /* Include pytest tests. */
  // setuptools: undefined,             /* Use setuptools with a setup.py script for packaging and publishing. */
  // venv: true,                        /* Use venv to manage a virtual environment for installing dependencies inside. */
});
project.synth();",
}
`;

exports[`projen new react 1`] = `
Object {
  ".projenrc.js": "const { web } = require('projen');
const project = new web.ReactProject({
  defaultReleaseBranch: 'main',
  name: 'my-project',

  // deps: [],                          /* Runtime dependencies of this module. */
  // description: undefined,            /* The description is just a string that helps people understand the purpose of the package. */
  // devDeps: [],                       /* Build dependencies for this module. */
  // packageName: undefined,            /* The \\"name\\" in package.json. */
  // projectType: ProjectType.UNKNOWN,  /* Which type of project this is (library/app). */
  // releaseWorkflow: undefined,        /* Define a GitHub workflow for releasing from \\"main\\" when new versions are bumped. */
});
project.synth();",
}
`;

exports[`projen new react-ts 1`] = `
Object {
  ".projenrc.js": "const { web } = require('projen');
const project = new web.ReactTypeScriptProject({
  defaultReleaseBranch: 'main',
  name: 'my-project',

  // deps: [],                          /* Runtime dependencies of this module. */
  // description: undefined,            /* The description is just a string that helps people understand the purpose of the package. */
  // devDeps: [],                       /* Build dependencies for this module. */
  // packageName: undefined,            /* The \\"name\\" in package.json. */
  // projectType: ProjectType.UNKNOWN,  /* Which type of project this is (library/app). */
  // releaseWorkflow: undefined,        /* Define a GitHub workflow for releasing from \\"main\\" when new versions are bumped. */
});
project.synth();",
}
`;

exports[`projen new typescript 1`] = `
Object {
  ".projenrc.js": "const { TypeScriptProject } = require('projen');
const project = new TypeScriptProject({
  defaultReleaseBranch: 'main',
  name: 'my-project',

  // deps: [],                          /* Runtime dependencies of this module. */
  // description: undefined,            /* The description is just a string that helps people understand the purpose of the package. */
  // devDeps: [],                       /* Build dependencies for this module. */
  // packageName: undefined,            /* The \\"name\\" in package.json. */
  // projectType: ProjectType.UNKNOWN,  /* Which type of project this is (library/app). */
  // releaseWorkflow: undefined,        /* Define a GitHub workflow for releasing from \\"main\\" when new versions are bumped. */
});
project.synth();",
}
`;

exports[`projen new typescript-app 1`] = `
Object {
  ".projenrc.js": "const { TypeScriptAppProject } = require('projen');
const project = new TypeScriptAppProject({
  defaultReleaseBranch: 'main',
  name: 'my-project',

  // deps: [],                          /* Runtime dependencies of this module. */
  // description: undefined,            /* The description is just a string that helps people understand the purpose of the package. */
  // devDeps: [],                       /* Build dependencies for this module. */
  // packageName: undefined,            /* The \\"name\\" in package.json. */
  // projectType: ProjectType.UNKNOWN,  /* Which type of project this is (library/app). */
  // releaseWorkflow: undefined,        /* Define a GitHub workflow for releasing from \\"main\\" when new versions are bumped. */
});
project.synth();",
}
`;
